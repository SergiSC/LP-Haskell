------------------------------------------------------------------------------------
--------------------------------------- EQL ----------------------------------------
------------------------------------------------------------------------------------
eql :: [Int] -> [Int] -> Bool
eql l1 l2 = and (zipWith (==) l1 l2) && length l1 == length l2

------------------------------------------------------------------------------------
--------------------------------------- PROD ---------------------------------------
------------------------------------------------------------------------------------
prod :: [Int] -> Int
prod array = foldl (*) 1 array

------------------------------------------------------------------------------------
------------------------------------ PRODOFEVENS -----------------------------------
------------------------------------------------------------------------------------
prodOfEvens :: [Int] -> Int
prodOfEvens array = prod $ filter even array

------------------------------------------------------------------------------------
------------------------------------- POWERSOF2 ------------------------------------
------------------------------------------------------------------------------------
powersOf2 :: [Int]
powersOf2 = iterate (*2) 1

------------------------------------------------------------------------------------
----------------------------------- SCALARPRODUCT ----------------------------------
------------------------------------------------------------------------------------
scalarProduct :: [Float] -> [Float] -> Float
scalarProduct l1 l2 = sum $ zipWith (*) l1 l2